name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.16.0'
  NODE_VERSION: '20.x'

jobs:
  build-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './api/package-lock.json'
    - name: Install dependencies
      run: |
        npm install
        npm install --save-dev eslint
    - name: Run linter
      run: npm run lint || true
    - name: Build API
      run: npm run build

  build-shared-lib:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./shared_lib
    steps:
    - uses: actions/checkout@v4
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    - name: Install dependencies
      run: flutter pub get
    - name: Analyze project source
      run: flutter analyze --no-fatal-infos || true
    - name: Run tests
      run: flutter test || true

  build-delivery-manager:
    runs-on: ubuntu-latest
    needs: build-shared-lib
    defaults:
      run:
        working-directory: ./delivery_manager_flutter
    steps:
    - uses: actions/checkout@v4
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    - name: Install dependencies
      run: |
        flutter pub get
        flutter pub run build_runner build --delete-conflicting-outputs || true
    - name: Build web
      run: flutter build web || true
    - name: Upload web build
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: delivery-manager-web
        path: delivery_manager_flutter/build/web/

  build-customer-app:
    runs-on: ubuntu-latest
    needs: build-shared-lib
    defaults:
      run:
        working-directory: ./customer_app
    steps:
    - uses: actions/checkout@v4
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    - name: Install dependencies
      run: flutter pub get
    - name: Build Android
      run: flutter build apk --release || true
    - name: Upload Android build
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: customer-app-android
        path: customer_app/build/app/outputs/flutter-apk/app-release.apk
